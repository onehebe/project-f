CActor -> f:
    int[] DOWN -> n
    int[] LEFT -> o
    int[] RIGHT -> p
    int[] UP -> q
    int iX -> a
    int iY -> b
    int sState -> r
    int hState -> s
    int power -> c
    int bagLv -> d
    int[] bag -> e
    int index -> f
    int tIndex -> g
    int gdExp -> h
    int gdLv -> i
    int fishExp -> j
    int fishLv -> k
    int aniExp -> l
    int aniLv -> t
    int cookExp -> m
    int cookLv -> u
    java.util.Random random -> v
    mainCanvas mCanvas -> w
    void iMove(int,int) -> a
    void iTurn(int) -> a
    int iPick(int) -> b
    int iHave(int) -> g
    void plant(CGround) -> a
    void weed(CGround) -> b
    void irrigate(CGround) -> c
    boolean plough(CGround) -> d
    void killBug(CGround) -> e
    void fish() -> a
    int feed(int) -> c
    int medi(int) -> d
    int buyAni(int) -> e
    int saleAni(int,int) -> b
    boolean cook(int) -> f
    void sleep() -> b
    void addExp(int,int) -> c
    byte[] toByte() -> c
    void loadData(java.io.ByteArrayInputStream) -> a
CAnimal -> g:
    int aniIndex -> e
    int aniState -> a
    int aniKind -> b
    int aniGrowState -> c
    int aniGrowDays -> d
    java.util.Random random -> f
    void changeKind(int) -> a
    void NextDay() -> a
    byte[] toByte() -> b
    void loadData(java.io.ByteArrayInputStream) -> a
CGround -> a:
    int gdCrop -> a
    int gdState -> b
    int gdGrowState -> c
    int gdGrowDays -> d
    java.util.Random random -> e
    void changeState(int) -> a
    void changeCrop(int) -> b
    void NextDay() -> a
    byte[] toByte() -> b
    void loadData(java.io.ByteArrayInputStream) -> a
Data -> b:
    int[][] aspect -> a
    int[][] cropData -> b
    int[][] aniData -> c
    int[][] cookData -> d
    java.lang.String[] cropName -> e
    java.lang.String[] aniName -> f
    java.lang.String[] fishName -> g
    int[][] cropPrice -> h
    int[][] aniPrice -> i
    int[] gdExpTab -> j
    int[] fishExpTab -> k
    int[] aniExpTab -> l
    int[] cookExpTab -> m
    int[] proPrice -> n
    byte[][] mapInfo -> o
    byte[][] mapInfo2 -> p
    byte[][] mapData0 -> q
    byte[][] mapData1 -> r
    byte[][] mapData2 -> s
    byte[][] mapData3 -> t
    byte[][] mapData4 -> u
    byte[][] map0 -> v
    byte[][] map1 -> w
    byte[][] map1_2 -> x
    byte[][] map2 -> y
    byte[][] map3 -> z
    byte[][] map4 -> A
    byte[][] map4_2 -> B
    int[] seasonData -> C
    int[] fesData -> D
    int[][] shopData -> E
GameMIDlet -> GameMIDlet:
    mainCanvas mc -> a
    javax.microedition.lcdui.Display display -> b
    void destroyApp(boolean) -> destroyApp
    void pauseApp() -> pauseApp
    void startApp() -> startApp
Store -> e:
    int length -> a
    StoreElement[] storeElement -> b
    int findStore(int) -> c
    boolean add(int) -> a
    boolean remove(int,int) -> a
    int getGoods(int) -> b
    byte[] toByte() -> a
    void loadData(java.io.ByteArrayInputStream) -> a
StoreElement -> d:
    int goods -> a
    int num -> b
mainCanvas -> c:
    javax.microedition.lcdui.Font gamefont -> i
    CActor actor -> j
    CGround[][] grd -> k
    CAnimal[] dull -> a
    CAnimal[] chicken -> b
    boolean running -> l
    boolean newin -> m
    int gState -> n
    int sState -> o
    int eSwitch -> c
    int key -> p
    boolean keyPressed -> q
    int sIndex -> r
    int sWidth -> s
    int sHeight -> t
    boolean scSwitch -> u
    long timebuffer -> v
    int keybuffer -> w
    boolean action -> x
    int money -> d
    int pX -> y
    int pY -> z
    int fX -> A
    int fY -> B
    int aspect -> C
    long time1 -> D
    long time2 -> E
    long pressedTime -> F
    int year -> G
    int mouth -> e
    int day -> f
    int hour -> g
    int min -> h
    int timeIndex -> H
    Store store -> I
    boolean storeNew -> J
    int thisPage -> K
    int banIndex -> L
    int bagIndex -> M
    int sysIndex -> N
    int shopIndex -> O
    int kitIndex -> P
    int kitP -> Q
    int[] kitbuf -> R
    boolean jump -> S
    javax.microedition.lcdui.Image title -> T
    javax.microedition.lcdui.Image bw -> U
    javax.microedition.lcdui.Image loading -> V
    javax.microedition.lcdui.Image actorPic -> W
    javax.microedition.lcdui.Image allMap -> X
    javax.microedition.lcdui.Image s1_l1 -> Y
    javax.microedition.lcdui.Image doorPic -> Z
    javax.microedition.lcdui.Image[] plant -> aa
    javax.microedition.lcdui.Image[] fish -> ab
    javax.microedition.lcdui.Image[] tool -> ac
    javax.microedition.lcdui.Image[] aniPro -> ad
    javax.microedition.lcdui.Image cropPic -> ae
    javax.microedition.lcdui.Image stateBox -> af
    javax.microedition.lcdui.Image headPic -> ag
    javax.microedition.lcdui.Image ban -> ah
    javax.microedition.lcdui.Image bMenu -> ai
    javax.microedition.lcdui.Image[] banner -> aj
    javax.microedition.lcdui.Image box1 -> ak
    javax.microedition.lcdui.Image box2 -> al
    javax.microedition.lcdui.Image grayMask -> am
    javax.microedition.lcdui.Image searchWord -> an
    javax.microedition.lcdui.Image searchBox -> ao
    javax.microedition.lcdui.Image stick -> ap
    javax.microedition.lcdui.Image[] number -> aq
    javax.microedition.lcdui.Image[] number2 -> ar
    javax.microedition.lcdui.Image[] word -> as
    javax.microedition.lcdui.Image storePic -> at
    javax.microedition.lcdui.Image[] nextButton -> au
    javax.microedition.lcdui.Image[] lastButton -> av
    javax.microedition.lcdui.Image[] confirm -> aw
    javax.microedition.lcdui.game.Sprite door -> ax
    javax.microedition.lcdui.game.Sprite door2 -> ay
    javax.microedition.lcdui.game.Sprite cabe -> az
    javax.microedition.lcdui.game.Sprite kit -> aA
    javax.microedition.lcdui.game.Sprite window -> aB
    javax.microedition.lcdui.game.Sprite window2 -> aC
    javax.microedition.lcdui.game.Sprite desk -> aD
    javax.microedition.lcdui.game.Sprite bed -> aE
    javax.microedition.lcdui.game.Sprite[] spDull -> aF
    javax.microedition.lcdui.game.Sprite[] spChicken -> aG
    javax.microedition.lcdui.game.TiledLayer tl -> aH
    javax.microedition.lcdui.game.TiledLayer tl2 -> aI
    javax.microedition.lcdui.game.TiledLayer cropLayer -> aJ
    javax.microedition.lcdui.game.TiledLayer cropStateLayer -> aK
    javax.microedition.lcdui.game.LayerManager lm -> aL
    int[] banData -> aM
    javax.microedition.lcdui.Graphics allGraph -> aN
    java.lang.Thread instance -> aO
    void intialize() -> b
    void skip(int) -> a
    void nextDay() -> a
    void intiPic() -> c
    void unloadPic() -> d
    boolean saveData(java.lang.String) -> c
    boolean readData(java.lang.String) -> d
    void fixScreen() -> e
    void move(int) -> b
    void buyAni() -> f
    void sellAni() -> g
    void headRender() -> h
    void banRender() -> i
    void infoRender(java.lang.String) -> a
    boolean confirmRender(java.lang.String) -> b
    void run() -> run
